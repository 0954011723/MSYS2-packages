# Maintainer: Alexey Pavlov <alexpux@gmail.com>
# Contributor: Martell Malone <martellmalone@gmail.com>

# controls the compiler that builds the crt with _variant
_variant=clang
#_variant=gcc

# controls the import library tool to be used when building the crt
_imptool=dlltool
# This is only temp until genlib becomes the default in mingw-w64
#_imptool=lib
#_imptool=genlib

if [ "${_imptool}" = "lib" ]; then
  # if you use lib.exe you need to specify its location
  _libexedir=/path/to/lib.exe
fi

_realname=crt
_mingw_suff=mingw-w64-cross
pkgname="${_mingw_suff}-${_realname}-git"
replaces="${_mingw_suff}-${_realname}"
provides=("${_mingw_suff}-${_realname}")
conflicts=("${_mingw_suff}-${_realname}")
pkgver=5.0.0.4547.41c3816
pkgrel=1
pkgdesc='MinGW-w64 CRT for cross-compiler'
arch=('i686' 'x86_64')
url='http://mingw-w64.sourceforge.net'
license=('custom')
groups=("${_mingw_suff}-toolchain" "${_mingw_suff}")
depends=("${_mingw_suff}-headers")

if [ "${_variant}" = "clang" ]; then
  makedepends=("git" "clang" "${_mingw_suff}-binutils")
else
  makedepends=("git" "${_mingw_suff}-gcc" "${_mingw_suff}-binutils")
fi

options=('!strip' 'staticlibs' '!emptydirs' '!buildflags')
source=("mingw-w64"::"git://git.code.sf.net/p/mingw-w64/mingw-w64"
        "0001-crt-crtexe-avoid-seh-because-of-.rva-when-using-clan.patch"
        "0004-def-changes-for-lib-driver.patch")
md5sums=('SKIP'
         '7e6502509e61c77f36ee237443aa947e'
         'e768c5c5a96d370373aaaa5bfc2db4f8')

_targets="i686-w64-mingw32 x86_64-w64-mingw32 armv7-w64-mingw32"

pkgver() {
  cd "$srcdir/mingw-w64"
  local _major=$(head -n 16 mingw-w64-headers/crt/_mingw_mac.h | grep '__MINGW64_VERSION_MAJOR' | sed -e 's/.* //' | tr '\n' '.' | sed 's/.$/\n/')
  local _minor=$(head -n 16 mingw-w64-headers/crt/_mingw_mac.h | grep '__MINGW64_VERSION_MINOR' | sed -e 's/.* //' | tr '\n' '.' | sed 's/.$/\n/')
  local _rev=0
  printf "%s.%s.%s.%s.%s" ${_major} ${_minor} ${_rev} "$(git rev-list --count HEAD)" "$(git rev-parse --short HEAD)"
}

prepare() {
  cd ${srcdir}/mingw-w64
  git am "${srcdir}"/0001-crt-crtexe-avoid-seh-because-of-.rva-when-using-clan.patch

  if [ "${_imptool}" = "lib" ]; then
    git am "${srcdir}/"0004-def-changes-for-lib-driver.patch
  fi
}

build() {
  for _target in ${_targets}; do
    msg "Building ${_target} CRT"
  case "$_target" in
    i686*)
      _crt_configure_args="--disable-lib64 --enable-lib32"
    ;;
    x86_64*)
      _crt_configure_args="--disable-lib32 --enable-lib64"
    ;;
    armv7*)
      _crt_configure_args="--disable-lib32 --disable-lib64 --enable-libarm32"
    ;;
  esac
    mkdir -p ${srcdir}/crt-${_target} && cd ${srcdir}/crt-${_target}

    #--with-host-libstdcxx="-lstdc++ -lsupc++"
    # we must stitch to this once i get it built / working :)
    # AS = as

  if [ "${_variant}" = "clang" ]; then
    export CC="${_target}-clang" CXX="${_target}-clang++" AR="llvm-ar" RANLIB="llvm-ranlib" DLLTOOL="${_target}-dlltool"
  fi

    ${srcdir}/mingw-w64/mingw-w64-crt/configure \
    --build=${CHOST} \
    --prefix=/opt/${_target} \
    --host=${_target} \
    --enable-wildcard \
    ${_crt_configure_args}

    if [ "${_imptool}" = "lib" ]; then

      #DLLTOOL = ${arch}-w64-mingw32-dlltool
      #AM_DLLTOOLFLAGS = -k --as=$(AS) --output-lib $@ $(am__append_1)

      #DLLTOOLFLAGSARM32 =
      #DLLTOOLFLAGS32 = --as-flags=--32 -m i386
      #DLLTOOLFLAGS64 = --as-flags=--64 -m i386:x86-64

      #DTDEFARM32 = $(DLLTOOL) $(DLLTOOLFLAGSARM32) $(AM_DLLTOOLFLAGS) --input-def
      #DTDEF32 = $(DLLTOOL) $(DLLTOOLFLAGS32) $(AM_DLLTOOLFLAGS) --input-def
      #DTDEF64 = $(DLLTOOL) $(DLLTOOLFLAGS64) $(AM_DLLTOOLFLAGS) --input-def

      sed -i "s|DLLTOOL =.*|DLLTOOL =${_libexedir}/lib|g" ${srcdir}/crt-${_target}/Makefile
      sed -i 's|AM_DLLTOOLFLAGS =.*|AM_DLLTOOLFLAGS = /OUT:$@ $(am__append_1)|g' ${srcdir}/crt-${_target}/Makefile

      sed -i "s|DLLTOOLFLAGSARM32 =.*|DLLTOOLFLAGSARM32 = /MACHINE:ARM|g" ${srcdir}/crt-${_target}/Makefile
      sed -i "s|DLLTOOLFLAGS32 =.*|DLLTOOLFLAGS32 = /MACHINE:X86|g" ${srcdir}/crt-${_target}/Makefile
      sed -i "s|DLLTOOLFLAGS64 =.*|DLLTOOLFLAGS64 = /MACHINE:X64|g" ${srcdir}/crt-${_target}/Makefile

      sed -i 's|DTDEFARM32 =.*|DTDEFARM32 = $(DLLTOOL) $(DLLTOOLFLAGSARM32) $(AM_DLLTOOLFLAGS)|g' ${srcdir}/crt-${_target}/Makefile
      sed -i 's|DTDEF32 =.*|DTDEF32 = $(DLLTOOL) $(DLLTOOLFLAGS32) $(AM_DLLTOOLFLAGS)|g' ${srcdir}/crt-${_target}/Makefile
      sed -i 's|DTDEF64 =.*|DTDEF64 = $(DLLTOOL) $(DLLTOOLFLAGS64) $(AM_DLLTOOLFLAGS)|g' ${srcdir}/crt-${_target}/Makefile

      # try add /DEF: to each .def file
      # very hacky solution
      sed -i 's|DTLIB32 = $(DTDEF32) $(top_srcdir)/|DTLIB32 = $(DTDEF32) /DEF:|g' ${srcdir}/crt-${_target}/Makefile
      sed -i 's|$(DTDEF32) lib32/msvcrt.def|$(DTDEF32) /DEF:lib32/msvcrt.def|g' ${srcdir}/crt-${_target}/Makefile
      sed -i 's|$(DTDEF32) $<.*|$(DTDEF32) /DEF:$<|g' ${srcdir}/crt-${_target}/Makefile

      # this def is broken dunno why
      sed -i 's|lib32/libx3daudio1_2.a||g' ${srcdir}/crt-${_target}/Makefile

    fi

    make
  done
}

package() {
  for _target in ${_targets}; do
    msg "Installing ${_target} crt"
    cd ${srcdir}/crt-${_target}
    make DESTDIR=${pkgdir} install
  done
}
