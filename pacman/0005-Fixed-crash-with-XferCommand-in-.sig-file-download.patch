From 898b9949ab6ad2260ea3d28b70ce63da452966b2 Mon Sep 17 00:00:00 2001
From: David Macek <david.macek.0@gmail.com>
Date: Tue, 11 Nov 2014 13:17:56 +0100
Subject: [PATCH] Fixed crash with XferCommand in .sig file download

---
 lib/libalpm/be_sync.c | 24 +++++++++++++++++-------
 1 file changed, 17 insertions(+), 7 deletions(-)

diff --git a/lib/libalpm/be_sync.c b/lib/libalpm/be_sync.c
index 62fd0f0..c9e189a 100644
--- a/lib/libalpm/be_sync.c
+++ b/lib/libalpm/be_sync.c
@@ -209,7 +209,8 @@ int SYMEXPORT alpm_db_update(int force, alpm_db_t *db)
 	}
 
 	for(i = db->servers; i; i = i->next) {
-		const char *server = i->data, *final_db_url = NULL;
+		char *final_db_url = NULL;
+		const char *server = i->data;
 		struct dload_payload payload;
 		size_t len;
 		int sig_ret = 0;
@@ -241,12 +242,21 @@ int SYMEXPORT alpm_db_update(int force, alpm_db_t *db)
 			unlink(sigpath);
 			free(sigpath);
 
-			/* if we downloaded a DB, we want the .sig from the same server */
-			/* print final_db_url into a buffer (leave space for .sig) */
-			len = strlen(final_db_url) + 5;
-			/* TODO fix leak syncpath and umask unset */
-			MALLOC(payload.fileurl, len, RET_ERR(handle, ALPM_ERR_MEMORY, -1));
-			snprintf(payload.fileurl, len, "%s.sig", final_db_url);
+            if (handle->fetchcb == NULL) {
+                /* if we downloaded a DB, we want the .sig from the same server */
+                /* print final_db_url into a buffer (leave space for .sig) */
+                len = strlen(final_db_url) + 5;
+                /* TODO fix leak syncpath and umask unset */
+                MALLOC(payload.fileurl, len, RET_ERR(handle, ALPM_ERR_MEMORY, -1));
+                snprintf(payload.fileurl, len, "%s.sig", final_db_url);
+            } else {
+                /* if we downloaded a DB, we want the .sig from the same server */
+                /* print server + filename into a buffer (leave space for .sig) */
+                len = strlen(server) + strlen(db->treename) + 9;
+                /* TODO fix leak syncpath and umask unset */
+                MALLOC(payload.fileurl, len, RET_ERR(handle, ALPM_ERR_MEMORY, -1));
+                snprintf(payload.fileurl, len, "%s/%s.db.sig", server, db->treename);
+            }
 			payload.handle = handle;
 			payload.force = 1;
 			payload.errors_ok = (level & ALPM_SIG_DATABASE_OPTIONAL);
-- 
1.8.4.msysgit.0

