From 06c22fa1635ac3cf9d7349ae587915ffddc6e029 Mon Sep 17 00:00:00 2001
From: martell <martellmalone@gmail.com>
Date: Tue, 11 Nov 2014 04:28:02 +0000
Subject: [PATCH 18/18] Fix various cross initialization errors under gcc

---
 src/ConEmu/Options.cpp    | 4 +++-
 src/ConEmu/RealBuffer.cpp | 4 +++-
 src/ConEmuHk/Console2.h   | 3 ++-
 src/common/CmdLine.cpp    | 5 ++++-
 4 files changed, 12 insertions(+), 4 deletions(-)

diff --git a/src/ConEmu/Options.cpp b/src/ConEmu/Options.cpp
index 2000b3d..9098c7b 100644
--- a/src/ConEmu/Options.cpp
+++ b/src/ConEmu/Options.cpp
@@ -1245,6 +1245,8 @@ bool Settings::LoadCmdTask(SettingsBase* reg, CommandTasks* &pTask, int iIndex)
 	bool lbRc = false;
 	wchar_t szVal[32];
 	int iCmdMax = 0, iCmdCount = 0;
+    
+    DWORD VkMod;
 
 	wchar_t* pszNameSet = NULL;
 	if (iIndex >= 0)
@@ -1272,7 +1274,7 @@ bool Settings::LoadCmdTask(SettingsBase* reg, CommandTasks* &pTask, int iIndex)
 	pTask->SetName(pszNameSet, iIndex);
 
 	pTask->HotKey.HkType = chk_Task;
-	DWORD VkMod = 0;
+	VkMod = 0;
 	if ((iIndex >= 0) && reg->Load(L"Hotkey", VkMod))
 		pTask->HotKey.SetVkMod(VkMod);
 	else
diff --git a/src/ConEmu/RealBuffer.cpp b/src/ConEmu/RealBuffer.cpp
index 294c73d..dd684e4 100644
--- a/src/ConEmu/RealBuffer.cpp
+++ b/src/ConEmu/RealBuffer.cpp
@@ -673,6 +673,8 @@ BOOL CRealBuffer::SetConsoleSizeSrv(USHORT sizeX, USHORT sizeY, USHORT sizeBuffe
 	//bool bLargestReached = false;
 	bool bSecondTry = false;
 
+    bool bNeedApplyConsole;
+
 	_ASSERTE(anCmdID==CECMD_SETSIZESYNC || anCmdID==CECMD_SETSIZENOSYNC || anCmdID==CECMD_CMDSTARTED || anCmdID==CECMD_CMDFINISHED);
 	//ExecutePrepareCmd(&lIn.hdr, anCmdID, lIn.hdr.cbSize);
 	if (!pIn /*|| !pOut*/)
@@ -793,7 +795,7 @@ BOOL CRealBuffer::SetConsoleSizeSrv(USHORT sizeX, USHORT sizeY, USHORT sizeBuffe
 	ResetEvent(mp_RCon->mh_ApplyFinished);
 
 	_ASSERTE(mp_RCon->m_ConsoleMap.IsValid());
-	bool bNeedApplyConsole =
+	bNeedApplyConsole =
 		mp_RCon->m_ConsoleMap.IsValid()
 		&& (anCmdID == CECMD_SETSIZESYNC)
 		&& (mp_RCon->mn_MonitorThreadID != GetCurrentThreadId());
diff --git a/src/ConEmuHk/Console2.h b/src/ConEmuHk/Console2.h
index b719550..17de078 100644
--- a/src/ConEmuHk/Console2.h
+++ b/src/ConEmuHk/Console2.h
@@ -35,6 +35,7 @@ int InjectHookDLL(PROCESS_INFORMATION pi, InjectHookFunctions* pfn /*UINT_PTR fn
 	BYTE* 		code	 = NULL;
 	wchar_t 	strHookDllPath[MAX_PATH*2] = {};
 	DWORD 		dwErrCode = 0;
+	DWORD_PTR nLoadLibraryProcShift;
 #ifndef _WIN64
 	// starting a 32-bit process
 	LPCWSTR		pszDllName = L"\\ConEmuHk.dll";
@@ -74,7 +75,7 @@ int InjectHookDLL(PROCESS_INFORMATION pi, InjectHookFunctions* pfn /*UINT_PTR fn
 	}
 
 	//UINT_PTR fnGetDllByName = 0;
-	DWORD_PTR nLoadLibraryProcShift = 0;
+	nLoadLibraryProcShift = 0;
 	//HMODULE hNtDll, hKernel;
 	//if (nOsVer >= 0x0602)
 	if (pfn->fnLdrGetDllHandleByName)
diff --git a/src/common/CmdLine.cpp b/src/common/CmdLine.cpp
index dab6ec3..c386089 100644
--- a/src/common/CmdLine.cpp
+++ b/src/common/CmdLine.cpp
@@ -412,6 +412,9 @@ bool IsNeedCmd(BOOL bRootCmd, LPCWSTR asCmdLine, CmdArg &szExe,
 	bool rbRootIsCmdExe = true;
 	bool rbAlwaysConfirmExit = false;
 	bool rbAutoDisableConfirmExit = false;
+
+    wchar_t *pwszEndSpace;
+
 	if (rsArguments) *rsArguments = NULL;
 
 	bool lbRc = false;
@@ -682,7 +685,7 @@ bool IsNeedCmd(BOOL bRootCmd, LPCWSTR asCmdLine, CmdArg &szExe,
 	//pwszCopy = wcsrchr(szArg, L'\\'); if (!pwszCopy) pwszCopy = szArg; else pwszCopy ++;
 	pwszCopy = PointToName(szExe);
 	//2009-08-27
-	wchar_t *pwszEndSpace = szExe.ms_Arg + lstrlenW(szExe) - 1;
+	pwszEndSpace = szExe.ms_Arg + lstrlenW(szExe) - 1;
 
 	while ((*pwszEndSpace == L' ') && (pwszEndSpace > szExe))
 	{
