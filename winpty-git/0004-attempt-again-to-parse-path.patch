From 30836d4c58b63fbc0a25735905097d21f5446858 Mon Sep 17 00:00:00 2001
From: martell <martellmalone@gmail.com>
Date: Sat, 13 Sep 2014 22:48:27 +0100
Subject: [PATCH 4/4] attempt again to parse path

---
 unix-adapter/main.cc | 22 +++++++++++-----------
 1 file changed, 11 insertions(+), 11 deletions(-)

diff --git a/unix-adapter/main.cc b/unix-adapter/main.cc
index dcceabd..783e8a7 100644
--- a/unix-adapter/main.cc
+++ b/unix-adapter/main.cc
@@ -217,19 +217,19 @@ static void setFdNonBlock(int fd)
     fcntl(fd, F_SETFL, status | O_NONBLOCK);
 }
 
-extern "C" int
-cygwin_conv_to_win32_path (const char path, char win32_path)
-{
-return cygwin_conv_path (CCP_POSIX_TO_WIN_A | CCP_RELATIVE, path, win32_path,
-MAX_PATH);
-}
+//extern "C" int
+//cygwin_conv_to_win32_path (const char path, char win32_path)
+//{
+//return cygwin_conv_path (CCP_POSIX_TO_WIN_A | CCP_RELATIVE, path, win32_path,
+//MAX_PATH);
+//}
 
 // Convert the path to a Win32 path if it is a POSIX path, and convert slashes
 // to backslashes.
 static std::string convertPosixPathToWin(const std::string &path)
 {
     char *tmp;
-#if !defined(__MSYS__) && CYGWIN_VERSION_API_MINOR >= 181
+//#if !defined(__MSYS__) && CYGWIN_VERSION_API_MINOR >= 181
     ssize_t newSize = cygwin_conv_path(CCP_POSIX_TO_WIN_A | CCP_RELATIVE,
                                        path.c_str(), NULL, 0);
     assert(newSize >= 0);
@@ -237,16 +237,16 @@ static std::string convertPosixPathToWin(const std::string &path)
     ssize_t success = cygwin_conv_path(CCP_POSIX_TO_WIN_A | CCP_RELATIVE,
                                        path.c_str(), tmp, newSize + 1);
     assert(success == 0);
-#else
+//#else
     // In the current Cygwin header file, this API is documented as deprecated
     // because it's restricted to paths of MAX_PATH length.  In the CVS version
     // of MSYS, the newer API doesn't exist, and this older API is implemented
     // using msys_p2w, which seems like it would handle paths larger than
     // MAX_PATH, but there's no way to query how large the new path is.
     // Hopefully, this is large enough.
-    tmp = new char[MAX_PATH + path.size()];
-    cygwin_conv_to_win32_path(path.c_str(), tmp);
-#endif
+//    tmp = new char[MAX_PATH + path.size()];
+//    cygwin_conv_to_win32_path(path.c_str(), tmp);
+//#endif
     for (int i = 0; tmp[i] != '\0'; ++i) {
         if (tmp[i] == '/')
             tmp[i] = '\\';
-- 
2.1.0

