diff -Naur binutils-2.26/bfd/bfd-in.h binutils-2.26.0110/bfd/bfd-in.h
--- binutils-2.26/bfd/bfd-in.h	2015-11-13 09:27:40.000000000 +0100
+++ binutils-2.26.0110/bfd/bfd-in.h	2016-03-10 19:05:13.082461245 +0100
@@ -137,7 +137,7 @@
 
 #if BFD_HOST_64BIT_LONG
 #define BFD_VMA_FMT "l"
-#elif defined (__MSVCRT__)
+#elif defined(__MSVCRT__) && !defined( __USE_MINGW_ANSI_STDIO)
 #define BFD_VMA_FMT "I64"
 #else
 #define BFD_VMA_FMT "ll"
diff -Naur binutils-2.26/bfd/bfd-in2.h binutils-2.26.0110/bfd/bfd-in2.h
--- binutils-2.26/bfd/bfd-in2.h	2016-01-25 09:51:06.000000000 +0100
+++ binutils-2.26.0110/bfd/bfd-in2.h	2016-03-10 19:05:13.092460981 +0100
@@ -144,7 +144,7 @@
 
 #if BFD_HOST_64BIT_LONG
 #define BFD_VMA_FMT "l"
-#elif defined (__MSVCRT__)
+#elif defined (__MSVCRT__) && !defined(__USE_MINGW_ANSI_STDIO)
 #define BFD_VMA_FMT "I64"
 #else
 #define BFD_VMA_FMT "ll"
diff -Naur binutils-2.26/binutils/dwarf.c binutils-2.26.0110/binutils/dwarf.c
--- binutils-2.26/binutils/dwarf.c	2016-01-25 09:51:06.000000000 +0100
+++ binutils-2.26.0110/binutils/dwarf.c	2016-03-10 19:08:01.061364166 +0100
@@ -164,7 +164,7 @@
 }
 
 #if defined HAVE_LONG_LONG && SIZEOF_LONG_LONG > SIZEOF_LONG
-# ifndef __MINGW32__
+#if !defined(__MSVCRT__) || defined(__USE_MINGW_ANSI_STDIO)
 #  define DWARF_VMA_FMT		"ll"
 #  define DWARF_VMA_FMT_LONG	"%16.16llx"
 # else
diff -Naur binutils-2.26/binutils/nm.c binutils-2.26.0110/binutils/nm.c
--- binutils-2.26/binutils/nm.c	2015-11-13 09:27:41.000000000 +0100
+++ binutils-2.26.0110/binutils/nm.c	2016-03-10 19:05:13.159125881 +0100
@@ -162,7 +162,7 @@
 #if BFD_HOST_64BIT_LONG
 static char value_format_64bit[] = "%016lx";
 #elif BFD_HOST_64BIT_LONG_LONG
-#ifndef __MSVCRT__
+#if !defined(__MSVCRT__) || defined(__USE_MINGW_ANSI_STDIO)
 static char value_format_64bit[] = "%016llx";
 #else
 static char value_format_64bit[] = "%016I64x";
@@ -292,7 +292,7 @@
 #if BFD_HOST_64BIT_LONG
       value_format_64bit[5] = *radix;
 #elif BFD_HOST_64BIT_LONG_LONG
-#ifndef __MSVCRT__
+#if !defined(__MSVCRT__) || defined(__USE_MINGW_ANSI_STDIO)
       value_format_64bit[6] = *radix;
 #else
       value_format_64bit[7] = *radix;
diff -Naur binutils-2.26/binutils/prdbg.c binutils-2.26.0110/binutils/prdbg.c
--- binutils-2.26/binutils/prdbg.c	2015-11-13 09:27:41.000000000 +0100
+++ binutils-2.26.0110/binutils/prdbg.c	2016-03-10 19:05:13.169125616 +0100
@@ -502,7 +502,7 @@
 #if BFD_HOST_64BIT_LONG_LONG
   else if (sizeof (vma) <= sizeof (unsigned long long))
     {
-#ifndef __MSVCRT__
+#if !defined(__MSVCRT__) || defined(__USE_MINGW_ANSI_STDIO)
       if (hexp)
 	sprintf (buf, "0x%llx", (unsigned long long) vma);
       else if (unsignedp)
diff -Naur binutils-2.26/binutils/readelf.c binutils-2.26.0110/binutils/readelf.c
--- binutils-2.26/binutils/readelf.c	2015-11-13 09:27:41.000000000 +0100
+++ binutils-2.26.0110/binutils/readelf.c	2016-03-10 19:05:13.195791576 +0100
@@ -1150,7 +1150,7 @@
 		  : "%12.12lx  %12.12lx ",
 		  offset, inf);
 #elif BFD_HOST_64BIT_LONG_LONG
-#ifndef __MSVCRT__
+#if !defined(__MSVCRT__) || defined(__USE_MINGW_ANSI_STDIO)
 	  printf (do_wide
 		  ? "%16.16llx  %16.16llx "
 		  : "%12.12llx  %12.12llx ",
@@ -12174,7 +12174,7 @@
 	{
 	  size_t maxlen = end - data;
 
-#ifndef __MSVCRT__
+#if !defined(__MSVCRT__) || defined(__USE_MINGW_ANSI_STDIO)
 	  /* PR 11128: Use two separate invocations in order to work
              around bugs in the Solaris 8 implementation of printf.  */
 	  printf ("  [%6tx]  ", data - start);
diff -Naur binutils-2.26/binutils/strings.c binutils-2.26.0110/binutils/strings.c
--- binutils-2.26/binutils/strings.c	2015-11-13 09:27:41.000000000 +0100
+++ binutils-2.26.0110/binutils/strings.c	2016-03-10 19:12:22.094542173 +0100
@@ -595,7 +595,7 @@
 #ifdef HAVE_LONG_LONG
 	    if (sizeof (start) > sizeof (long))
 	      {
-# ifndef __MSVCRT__
+#if !defined(__MSVCRT__) || defined(__USE_MINGW_ANSI_STDIO)
 	        printf ("%7llo ", (unsigned long long) start);
 # else
 	        printf ("%7I64o ", (unsigned long long) start);
@@ -614,7 +614,7 @@
 #ifdef HAVE_LONG_LONG
 	    if (sizeof (start) > sizeof (long))
 	      {
-# ifndef __MSVCRT__
+#if !defined(__MSVCRT__) || defined(__USE_MINGW_ANSI_STDIO)
 	        printf ("%7lld ", (unsigned long long) start);
 # else
 	        printf ("%7I64d ", (unsigned long long) start);
@@ -633,7 +633,7 @@
 #ifdef HAVE_LONG_LONG
 	    if (sizeof (start) > sizeof (long))
 	      {
-# ifndef __MSVCRT__
+#if !defined(__MSVCRT__) || defined(__USE_MINGW_ANSI_STDIO)
 	        printf ("%7llx ", (unsigned long long) start);
 # else
 	        printf ("%7I64x ", (unsigned long long) start);
diff -Naur binutils-2.26/gas/as.h binutils-2.26.0110/gas/as.h
--- binutils-2.26/gas/as.h	2015-11-13 09:27:41.000000000 +0100
+++ binutils-2.26.0110/gas/as.h	2016-03-10 19:05:13.245790251 +0100
@@ -451,10 +451,10 @@
 
 #define PRINTF_LIKE(FCN) \
   void FCN (const char *format, ...) \
-    __attribute__ ((__format__ (__printf__, 1, 2)))
+    __attribute__ ((__format__ (gnu_printf, 1, 2)))
 #define PRINTF_WHERE_LIKE(FCN) \
   void FCN (char *file, unsigned int line, const char *format, ...) \
-    __attribute__ ((__format__ (__printf__, 3, 4)))
+    __attribute__ ((__format__ (gnu_printf, 3, 4)))
 
 #else /* __GNUC__ < 2 || defined(VMS) */
 
diff -Naur binutils-2.26/gas/read.c binutils-2.26.0110/gas/read.c
--- binutils-2.26/gas/read.c	2015-11-13 09:27:41.000000000 +0100
+++ binutils-2.26.0110/gas/read.c	2016-03-10 19:05:13.239123761 +0100
@@ -4352,7 +4352,7 @@
 	      || (get & hibit) == 0))
 	{		/* Leading bits contain both 0s & 1s.  */
 #if defined (BFD64) && BFD_HOST_64BIT_LONG_LONG
-#ifndef __MSVCRT__
+#if !defined(__MSVCRT__) || defined(__USE_MINGW_ANSI_STDIO)
 	  as_warn (_("value 0x%llx truncated to 0x%llx"),
 		   (unsigned long long) get, (unsigned long long) use);
 #else
diff -Naur binutils-2.26/gold/configure binutils-2.26.0110/gold/configure
--- binutils-2.26/gold/configure	2015-11-13 09:27:42.000000000 +0100
+++ binutils-2.26.0110/gold/configure	2016-03-10 19:05:13.252456741 +0100
@@ -7489,7 +7489,7 @@
 /* end confdefs.h.  */
 
 template<typename T> extern void foo(const char*, ...)
-  __attribute__ ((__format__ (__printf__, 1, 2)));
+  __attribute__ ((__format__ (gnu_printf, 1, 2)));
 template<typename T> void foo(const char* format, ...) {}
 void bar() { foo<int>("%s\n", "foo"); }
 
diff -Naur binutils-2.26/gold/configure.ac binutils-2.26.0110/gold/configure.ac
--- binutils-2.26/gold/configure.ac	2015-11-13 09:27:42.000000000 +0100
+++ binutils-2.26.0110/gold/configure.ac	2016-03-10 19:05:13.259123231 +0100
@@ -616,7 +616,7 @@
 [gold_cv_template_attribute],
 [AC_COMPILE_IFELSE([
 template<typename T> extern void foo(const char*, ...)
-  __attribute__ ((__format__ (__printf__, 1, 2)));
+  __attribute__ ((__format__ (gnu_printf, 1, 2)));
 template<typename T> void foo(const char* format, ...) {}
 void bar() { foo<int>("%s\n", "foo"); }
 ], [gold_cv_template_attribute=yes], [gold_cv_template_attribute=no])])
diff -Naur binutils-2.26/include/ansidecl.h binutils-2.26.0110/include/ansidecl.h
--- binutils-2.26/include/ansidecl.h	2015-11-13 09:27:42.000000000 +0100
+++ binutils-2.26.0110/include/ansidecl.h	2016-03-10 19:05:13.262456476 +0100
@@ -195,7 +195,7 @@
    before GCC 3.3, but as of 3.3 we need to add the `nonnull'
    attribute to retain this behavior.  */
 #ifndef ATTRIBUTE_PRINTF
-#define ATTRIBUTE_PRINTF(m, n) __attribute__ ((__format__ (__printf__, m, n))) ATTRIBUTE_NONNULL(m)
+#define ATTRIBUTE_PRINTF(m, n) __attribute__ ((__format__ (gnu_printf, m, n))) ATTRIBUTE_NONNULL(m)
 #define ATTRIBUTE_PRINTF_1 ATTRIBUTE_PRINTF(1, 2)
 #define ATTRIBUTE_PRINTF_2 ATTRIBUTE_PRINTF(2, 3)
 #define ATTRIBUTE_PRINTF_3 ATTRIBUTE_PRINTF(3, 4)
@@ -223,7 +223,7 @@
    NULL format specifier was allowed as of gcc 3.3.  */
 #ifndef ATTRIBUTE_NULL_PRINTF
 # if (GCC_VERSION >= 3003)
-#  define ATTRIBUTE_NULL_PRINTF(m, n) __attribute__ ((__format__ (__printf__, m, n)))
+#  define ATTRIBUTE_NULL_PRINTF(m, n) __attribute__ ((__format__ (gnu_printf, m, n)))
 # else
 #  define ATTRIBUTE_NULL_PRINTF(m, n)
 # endif /* GNUC >= 3.3 */
