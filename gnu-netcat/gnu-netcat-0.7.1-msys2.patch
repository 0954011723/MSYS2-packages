diff --git a/config.guess b/config.guess
index 0e30d56..63b1c89 100755
--- a/config.guess
+++ b/config.guess
@@ -771,6 +771,9 @@ EOF
     i*:CYGWIN*:*)
 	echo ${UNAME_MACHINE}-pc-cygwin
 	exit 0 ;;
+    i*:MSYS*:*)
+	echo ${UNAME_MACHINE}-pc-msys
+	exit 0 ;;
     i*:MINGW*:*)
 	echo ${UNAME_MACHINE}-pc-mingw32
 	exit 0 ;;
@@ -795,6 +798,9 @@ EOF
     p*:CYGWIN*:*)
 	echo powerpcle-unknown-cygwin
 	exit 0 ;;
+    p*:MSYS*:*)
+	echo powerpcle-unknown-msys
+	exit 0 ;;
     prep*:SunOS:5.*:*)
 	echo powerpcle-unknown-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
 	exit 0 ;;
diff --git a/config.rpath b/config.rpath
index 5ead758..c55bf37 100755
--- a/config.rpath
+++ b/config.rpath
@@ -93,7 +93,7 @@ hardcode_direct=no
 hardcode_minus_L=no
 
 case "$host_os" in
-  cygwin* | mingw* | pw32*)
+  cygwin* | msys* | mingw* | pw32*)
     # FIXME: the MSVC++ port hasn't been tested in a loooong time
     # When not using gcc, we currently assume that we are using
     # Microsoft Visual C++.
@@ -131,7 +131,7 @@ if test "$with_gnu_ld" = yes; then
         ld_shlibs=no
       fi
       ;;
-    cygwin* | mingw* | pw32*)
+    cygwin* | msys* | mingw* | pw32*)
       # hardcode_libdir_flag_spec is actually meaningless, as there is
       # no search path for DLLs.
       hardcode_libdir_flag_spec='-L$libdir'
@@ -225,7 +225,7 @@ else
       # see comment about different semantics on the GNU ld section
       ld_shlibs=no
       ;;
-    cygwin* | mingw* | pw32*)
+    cygwin* | msys* | mingw* | pw32*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
@@ -370,9 +370,9 @@ case "$host_os" in
     sys_lib_search_path_spec="/shlib /usr/lib /usr/X11/lib /usr/contrib/lib /lib /usr/local/lib"
     sys_lib_dlsearch_path_spec="/shlib /usr/lib /usr/local/lib"
     ;;
-  cygwin* | mingw* | pw32*)
+  cygwin* | msys* | mingw* | pw32*)
     case $GCC,$host_os in
-      yes,cygwin*)
+      yes,cygwin*|msys*)
         shlibext=dll.a
         ;;
       yes,mingw*)
diff --git a/config.sub b/config.sub
index c8a01be..93640e8 100755
--- a/config.sub
+++ b/config.sub
@@ -1133,7 +1133,7 @@ case $os in
 	      | -ptx* | -coff* | -ecoff* | -winnt* | -domain* | -vsta* \
 	      | -udi* | -eabi* | -lites* | -ieee* | -go32* | -aux* \
 	      | -chorusos* | -chorusrdb* \
-	      | -cygwin* | -pe* | -psos* | -moss* | -proelf* | -rtems* \
+	      | -cygwin* | -msys* | -pe* | -psos* | -moss* | -proelf* | -rtems* \
 	      | -mingw32* | -linux-gnu* | -uxpv* | -beos* | -mpeix* | -udk* \
 	      | -interix* | -uwin* | -mks* | -rhapsody* | -darwin* | -opened* \
 	      | -openstep* | -oskit* | -conix* | -pw32* | -nonstopux* \
diff --git a/configure.ac b/configure.ac
index f7a09a9..b20bf4e 100644
--- a/configure.ac
+++ b/configure.ac
@@ -71,10 +71,6 @@ dnl Support BSD4.4 "sa_len" extension when calculating sockaddrs arrays
 AC_CHECK_MEMBERS(struct sockaddr.sa_len, , , [#include <sys/types.h>
 #include <sys/socket.h>])
 
-dnl Check if it is available the RFC2292 IPv4 extension and in_port_t.
-AC_CHECK_TYPES([struct in_pktinfo, in_port_t], , , [#include <sys/types.h>
-#include <netinet/in.h>])
-
 # check if this compiler supports the common parameter `-Wall'
 if test -n "$GCC"; then
   CFLAGS="$CFLAGS -Wall"
