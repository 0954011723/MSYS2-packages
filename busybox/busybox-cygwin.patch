diff --git a/Makefile b/Makefile
index c58097d..3093291 100644
--- a/Makefile
+++ b/Makefile
@@ -720,7 +720,7 @@ ifeq ($(SKIP_STRIP),y)
 	$(Q)cp $< $@
 else
 	$(Q)$(STRIP) -s --remove-section=.note --remove-section=.comment \
-		busybox_unstripped -o $@
+		busybox_unstripped -o $@.exe
 # strip is confused by PIE executable and does not set exec bits
 	$(Q)chmod a+x $@
 endif
diff --git a/coreutils/du.c b/coreutils/du.c
index b8bbe3d..eea084c 100644
--- a/coreutils/du.c
+++ b/coreutils/du.c
@@ -94,6 +94,7 @@ static void print(unsigned long size, const char *filename)
 {
 	/* TODO - May not want to defer error checking here. */
 #if ENABLE_FEATURE_HUMAN_READABLE
+	IF_NOT_FEATURE_DU_DEFAULT_BLOCKSIZE_1K(size *= 2;)
 	printf("%s\t%s\n",
 			/* size x 512 / G.disp_hr, show one fractional,
 			 * use suffixes if G.disp_hr == 0 */
@@ -194,8 +195,7 @@ int du_main(int argc UNUSED_PARAM, char **argv)
 	unsigned opt;
 
 #if ENABLE_FEATURE_HUMAN_READABLE
-	IF_FEATURE_DU_DEFAULT_BLOCKSIZE_1K(G.disp_hr = 1024;)
-	IF_NOT_FEATURE_DU_DEFAULT_BLOCKSIZE_1K(G.disp_hr = 512;)
+	G.disp_hr = 1024;
 	if (getenv("POSIXLY_CORRECT"))  /* TODO - a new libbb function? */
 		G.disp_hr = 512;
 #else
diff --git a/include/platform.h b/include/platform.h
index 60864c9..4162373 100644
--- a/include/platform.h
+++ b/include/platform.h
@@ -414,10 +414,18 @@
 #if defined(__CYGWIN__)
 # undef HAVE_CLEARENV
 # undef HAVE_FDPRINTF
-# undef HAVE_MEMRCHR
 # undef HAVE_PTSNAME_R
 # undef HAVE_STRVERSCMP
 # undef HAVE_UNLOCKED_LINE_OPS
+# define MAXSYMLINKS SYMLOOP_MAX
+# define __socklen_t_defined 1
+# define sigisemptyset(x) ((x) == (sigset_t)0)
+# define sethostname(x,y) (errno=ENOSYS,-1)
+# define GIO_SCRNMAP     0x4B40  /* get screen mapping from kernel */
+# define PIO_SCRNMAP     0x4B41  /* put screen mapping table in kernel */
+# define GIO_UNISCRNMAP  0x4B69  /* get full Unicode screen mapping */
+# define PIO_UNISCRNMAP  0x4B6A  /* set full Unicode screen mapping */
+# define GIO_UNIMAP      0x4B66  /* get unicode-to-font mapping from kernel */
 #endif
 
 /* These BSD-derived OSes share many similarities */
diff --git a/libbb/udp_io.c b/libbb/udp_io.c
index b8fb675..a577434 100644
--- a/libbb/udp_io.c
+++ b/libbb/udp_io.c
@@ -83,7 +83,7 @@ send_to_from(int fd, void *buf, size_t len, int flags,
 		 * and CMSG_DATA returns &u + size_t + int + int.
 		 * Thus direct assignment is ok:
 		 */
-		pktptr->ipi_spec_dst = ((struct sockaddr_in*)from)->sin_addr;
+//		pktptr->ipi_spec_dst = ((struct sockaddr_in*)from)->sin_addr;
 	}
 # if ENABLE_FEATURE_IPV6 && defined(IPV6_PKTINFO)
 	else if (to->sa_family == AF_INET6 && from->sa_family == AF_INET6) {
diff --git a/shell/cttyhack.c b/shell/cttyhack.c
index d1ac2cd..0cd0ecb 100644
--- a/shell/cttyhack.c
+++ b/shell/cttyhack.c
@@ -182,7 +182,7 @@
 	/* Some other session may have it as ctty,
 	 * try to steal it from them:
 	 */
-	ioctl(0, TIOCSCTTY, 1);
+	//ioctl(0, TIOCSCTTY, 1);
  ret:
 	BB_EXECVP_or_die(argv);
 }
diff --git a/util-linux/script.c b/util-linux/script.c
index 8fb991d..71aa527 100644
--- a/util-linux/script.c
+++ b/util-linux/script.c
@@ -195,7 +195,7 @@ int script_main(int argc UNUSED_PARAM, char **argv)
 		ioctl(0, TIOCSWINSZ, (char *)&win);
 	/* set pty as a controlling tty */
 	setsid();
-	ioctl(0, TIOCSCTTY, 0 /* 0: don't forcibly steal */);
+//	ioctl(0, TIOCSCTTY, 0 /* 0: don't forcibly steal */);
 
 	/* Non-ignored signals revert to SIG_DFL on exec anyway */
 	/*signal(SIGCHLD, SIG_DFL);*/
--- a/coreutils/who.c	2014-01-09 18:15:44.000000000 +0000
+++ b/coreutils/who.c	2014-10-19 13:26:21.626010400 +0100
@@ -105,7 +105,7 @@
 					idle_string(str6, st.st_atime);
 				/* manpages say ut_tv.tv_sec *is* time_t,
 				 * but some systems have it wrong */
-				seconds = ut->ut_tv.tv_sec;
+				//seconds = ut->ut_tv.tv_sec;
 				/* How wide time field can be?
 				 * "Nov 10 19:33:20": 15 chars
 				 * "2010-11-10 19:33": 16 chars
